head(iris)
iris[sample(nrow(iris),2),]
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
head(iris2)
plot(iris2$Sepal.Length,iris2$Sepal.Width)
iris2[1,]
iris2[,1]
start_pts <- iris2[sample(nrow(iris2),2),]
start_[ts]
start_pts
start_pts[1,]
start_pts[1,1]
start_pts[1,2]
z <- data.frame(matrix(ncol=2,nrow=2))
head(z)
z[1,1] <- 5
z
z[1,2] <- 4
z[2,1] <- 3
z[2,2] <- 6
z
min(z[1,])
which.min(z[1,])
which.max(z[1,])
x<-which.max(z[1,])
x
x[1]
x+2
which.min(x)
which.min(z)
nrow(z)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars[,1], mtcars[,2], mean)
c <- tapply(mtcars[,1], mtcars[,2], mean)
c[1]
c[2]
mtcars[,12] <- 1
head(mtcars)
mtcars[,12] <- 2
head(mtcars)
federalist <- read.csv("~/Downloads/federalist.txt", row.names=1)
View(federalist)
knitr::opts_chunk$set(echo = TRUE)
my_kmeans <-
iris %>%
select(Petal.Length, Petal.Width) %>%
kmeans(centers = 3)
my_kmeans
my_kmeans$cluster
my_kmeans$totss
v <- c(1,2,3,4,5)
data.frame(v)
w <- 50
print(c(v,w))
return(v)
list(v,w)
fmat <- dist(federalist, method = 'euclidean')
clusters <- hclust(fmat)
clusters
iris2
dist(iris2)
iris3 <- head(iris2)
iris3
dist(iris3)
miris3 <- dist(iris3)
which.min(miris3)
miris3[4]
miris[8]
miris3[8]
head(iris)
head(dist(iris[,1:2]))
dist(iris[,1:2]))
dist(iris[,1:2])
miris3
8//6
8/6
round(8/6)
ceiling(8/6)
8-2+1
8-2-1
ceiling(11/3)
ceiling(11/5)
nrow(miris3)
miris3
miris3[11]
dist(iris3,diag=TRUE)
which.min(dist(iris3,diag=TRUE))
ceiling(4/6)
nrow(dist(iris3,diag=TRUE))
length(dist(iris3,diag=TRUE))
iris3
nrow(iris3)
dist(iris3,diag=TRUE)
which.min(dist(iris3,diag=TRUE))
ceiling(4/6)
4-1+1
which.max(dist(iris3,diag=TRUE))
ceiling(14/6)
ceiling(14/5)
iris3
miris3
as.data.frame(miris3)
as.tibble(miris3)
dist(c(iris3[1,],iris3[2,]))
iris3[1]
iris3[2]
iris3[1,]
x<-c(1,2,3,4,5,0)
which.min(x)
x[2]
mean(c(2,4))
install.packages("ggdendro")
library(clust431)
k_means(iris,3)
library(clust431)
devtools::load_all(".")
k_means(iris,3)
library(clust431)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
k_means(iris2,3)
hier_clust(iris2,3)
library(clust431)
library(clust431)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
k_means(iris2,3)
devtools::load_all(".")
library(clust431)
library(clust431)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
k_means(iris2,3)
library(clust431)
library(clust431)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
k_means(iris2,3)
devtools::load_all(".")
library(clust431)
library(clust431)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
k_means(iris2,3)
library(clust431)
k_means(iris2,3)
k_means(iris2,3)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(clust431)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
k_means(iris2,3)
library(clust431)
k_means(iris2,3)
kmeans(iris2,3)_
kmeans(iris2,3)
k_means(iris2,3)
k_means(iris2)
hier_clust(iris2,3)
k_means(iris2,3)
k_means <- function(dat,k,pca=FALSE){
pts <- dat[sample(nrow(dat),k),]
x <- dat[,1]
y <- dat[,2]
dist <- data.frame(matrix(ncol=k,nrow=length(x)))
cluster <- c()
for(i in 1:k){
for(i in 1:length(x)){
dist[i,k] <- sqrt((pts[k,1] - x[i])^2 + (pts[k,2] - y[i])^2)
}
}
for(row in 1:nrow(dist)){
shortest <- which.min(dist[i,])
cluster <- c(cluster,shortest)
}
dat <- cbind(dat,cluster)
mean_x <- tapply(dat[,1], dat[,3],mean)
mean_y <- tapply(dat[,2], dat[,3], mean)
# repeat steps
for(step in 1:100){
for(col in 1:k){
for(i in 1:length(x)){
dist[i,k] <- sqrt((mean_x[k] - x[i])^2 + (mean_y[k] - y[i])^2)
}
}
clust <- c()
for(row in 1:nrow(dist)){
shortest <- which.min(dist[row,])
clust <- c(clust,shortest)
}
dat[,3] <- clust
mean_x <- tapply(dat[,1], dat[,3],mean)
mean_y <- tapply(dat[,2], dat[,3], mean)
}
results <- cluster
return(results)
}
hier_clust <- function(dat,k){
dat[,3] <- 1
for(clust in 1:k){
r1 <- c()
r2 <- c()
distance <- c()
for(row in 1:nrow(dat)){
set_x <- dat[row,1]
set_y <- dat[row,2]
for(obs in (row+1):nrow(dat)){
dist <- sqrt((set_x - dat[obs,1])^2 + (set_y - dat[obs,2])^2)
r1 <- c(r1, row)
r2 <- c(r2, obs)
distance <- c(distance,dist)
}
}
min_d <- which.min(distance)
find_r1 <- r1[min_d]
find_r2 <- r2[min_d]
meanx <- mean(c(dat[find_r1,1], dat[find_r2,1]))
meany <- mean(c(dat[find_r1,2], dat[find_r2,2]))
# find way to replace rows with new obs (meanx,meany)
clusters <- c(find_r1,find_r2)
return(clusters)
}
}
library(clust431)
library(dplyr)
iris2 <- iris %>% select(Sepal.Length,Sepal.Width)
k_means(iris2,3)
hier_clust(iris2,3)
